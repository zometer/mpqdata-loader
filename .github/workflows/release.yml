# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Release

on:
  workflow_dispatch:
    inputs: 
      gradleArgs: 
        description: 'Additional Gradle parameters'     
        required: false
        default: '' 
        type: text
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Get Build and Release Version
      run: | 
        `grep "=" gradle.properties | sed s/^/"export "/g`
        export RELEASE_VERSION=`echo $version | sed -e s/-SNAPSHOT//`
        env
        git config user.name "$GITHUB_ACTOR - RELEASE BUILD"
        git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
    - name: Build with Gradle
      uses: gradle/gradle-build-action@4137be6a8bf7d7133955359dbd952c0ca73b1021
      with:
        arguments: release -Prelease.useAutomaticVersion=true ${{ github.event.inputs.gradleArgs }}
    - name: Examine Build directory
      run: | 
        env
        ls -l build/libs build/helm/charts
    - name: Build Docker Image 
      run: |
        `grep "=" build/gradle-release.properties | sed s/^/"export "/g`
        echo "${{ env.GITHUB_REPOSITORY_OWNER }}/$artifact:$version"
        env
        docker build . --file Dockerfile --tag $GITHUB_REPOSITORY_OWNER/$artifact:$version
    - name: Log in to Docker Hub
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Push image to Docker Hub 
      run: |
        `grep "=" build/gradle-release.properties | sed s/^/"export "/g`
        env
        docker push $GITHUB_REPOSITORY_OWNER/$artifact:$version
    - name: Run chart-releaser
      uses: helm/chart-releaser-action@v1.2.1
      env:
        CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"    
        CR_OWNER: "${{ env.GITHUB_REPOSITORY_OWNER }}"
        CR_GIT_REPO: "helm-charts"
        CR_PACKAGE_PATH: "build/helm/charts/"
        CR_SKIP_EXISTING: true
