# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Sandbox

# TODO: helm-chart repo input and defaults for deploy job.

on:
  workflow_dispatch:
    inputs:
      gradleArgs:
        description: 'Additional Gradle parameters'
        required: false
        default: ''
        type: string
      helmChartRepo: 
        description: 'Helm Chart Repository'
        required: true
        default: 'zometer/helm-charts'
        type: string
      helmChartRepoBranch: 
        description: 'Helm chart index branch'
        required: true
        default: 'gh-pages'
        type: string
        
jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      GROUP: ${{ steps.releaseVars.outputs.GROUP }}
      ARTIFACT: ${{ steps.releaseVars.outputs.ARTIFACT }}
      VERSION: ${{ steps.releaseVars.outputs.VERSION }}
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Set Git User
      run: |
          git config user.name "$GITHUB_ACTOR - RELEASE BUILD"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
    - name: Build with Gradle
      uses: gradle/gradle-build-action@4137be6a8bf7d7133955359dbd952c0ca73b1021
      with:
        arguments: build -Prelease.useAutomaticVersion=true ${{ github.event.inputs.gradleArgs }}
    - name: Get Build and Release Version
      id: releaseVars
      run: |
        `cat build/resources/main/META-INF/build-info.properties | sed -e s/build./export\ /g`
        env
        echo "::set-output name=GROUP::$group"
        echo "::set-output name=ARTIFACT::$artifact"
        echo "::set-output name=VERSION::$version"
    - name: Examine Build directory
      run: |
        ls -l build/libs build/helm/charts
    - name: Log in to Docker Hub
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: ${{ github.repository_owner }}/${{ steps.releaseVars.outputs.ARTIFACT }}:${{ steps.releaseVars.outputs.VERSION }}
    - name: Upload Helm Chart Artifact
      uses: actions/upload-artifact@v2.3.1
      with:
        name: helm-chart
        path: build/helm/charts/*.tgz
  deploy-helm-chart:
    needs: build
    uses: zometer/github-actions/.github/workflows/push-helm-chart.yml@main
    with: 
      helmChartRepo: ${{ github.event.inputs.helmChartRepo }} 
      helmChartRepoBranch: ${{ github.event.inputs.helmChartRepoBranch }}
      artifactName: helm-chart
    secrets: 
      githubToken: ${{ secrets.HELM_CHARTS_REPO_TOKEN }}